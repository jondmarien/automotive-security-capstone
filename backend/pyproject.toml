[project]
name = "automotive-security-backend"
version = "0.1.0"
description = "Backend for Automotive Security Capstone Project"
authors = [
    {name = "Jonathan Marien", email = "jon@chron0.tech"}
]
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.27.0",
    "pydantic>=2.6.0",
    "python-dotenv>=1.0.0",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "pydantic-settings>=2.9.1",
    "python-json-logger>=3.3.0",
    "motor>=3.7.1",
    "numpy>=1.26.4",
    "asyncio>=3.4.3",
    "aiohttp>=3.12.15",
    "matplotlib>=3.10.3",
    "scikit-learn>=1.7.1",
    "seaborn>=0.13.2",
    "pyfiglet>=1.0.3",
    "rich>=14.1.0",
    "prompt-toolkit>=3.0.51",
    "ty>=0.0.1a16",
    "ruff>=0.12.7",
    "pytest>=8.4.1",
]

[tool.hatch.build.targets.wheel]
packages = ["pico", "rtl_sdr", "utils"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest-asyncio>=1.1.0",
]

# Ruff configuration
[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
# Enable basic linting rules
select = ["E4", "E7", "E9", "F"]
# Ignore problematic rules
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
# Ignore import errors for MicroPython files
"pico/*.py" = ["F401", "E402", "F811"]
"setup.py" = ["F401", "E402"]

# Type checking configuration for ty
[tool.ty.src]
# Exclude MicroPython files and build files from type checking
exclude = [
    "pico/**",
    "setup.py",
]

# Configure overrides for test files and optional dependencies
[[tool.ty.overrides]]
include = ["tests/**"]
[tool.ty.overrides.rules]
"unresolved-import" = "ignore"  # pytest may not be installed

[[tool.ty.overrides]]
include = ["utils/simple_performance_monitor.py"]
[tool.ty.overrides.rules]
"unresolved-import" = "ignore"  # psutil is optional

[[tool.ty.overrides]]
include = ["deploy_pico.py"]
[tool.ty.overrides.rules]
"unresolved-import" = "ignore"  # pyserial is optional for Pico deployment
